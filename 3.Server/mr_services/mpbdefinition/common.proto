syntax = "proto3";

package mpb;

option go_package = "./mpb";

message EUser {
    enum UserState {
        UserState_Offline = 0;
        UserState_Online = 1;
        UserState_InTeam = 2;
        UserState_InGame = 3;
    }
}

message Empty {
}

message Region {
    string region = 1;
    string tcp_gateway_id = 2;
}

message Claims {
    uint64 user_id = 1;
    Region region = 2;
    string account = 3;
    string client_version = 4;
    string nickname = 5;
    string wallet_addr = 6;
}


message AccountInfo {
    string account = 1;
    uint64 user_id = 2;
    string nickname = 3;
    string icon = 4;
    string email = 5;
    string aptos_wallet_addr = 6;
}

message UserProfile {
    uint64 user_id = 1;
    string account = 2;
    string nickname = 3;
    uint32 icon = 4;
    uint32 icon_box = 5;
    uint32 gender = 6;
    uint32 vip = 7;
    EUser.UserState user_state = 8;
    string region = 9;
}

message UserInfo {
    uint64 user_id = 1;
    UserProfile basic_profile = 2;
}

message ReqUserId {
    uint64 user_id = 1;
}

message ReqUserIdRegion {
    uint64 user_id = 1;
    Region region = 2;
}

message EItem{
    enum ItemType {
        ItemType_None = 0;
        ItemType_General = 1;
        ItemType_Box = 10;
        ItemType_Coin = 91;
        ItemType_Gem = 92;
    }

    enum ItemId {
        ItemId_None = 0;
        ItemId_Coin = 91000001;
        ItemId_Gem = 92000001;
    }

    enum DropType {
        DropType_None = 0;
        DropType_1 = 1;
        DropType_2 = 2;
        DropType_3 = 3;
    }

    enum TransReason {
        TransReason_None = 0;
        TransReason_Mail = 1;
    }
}

message Item {
    uint32 id = 1;
    uint32 num = 2;
    uint64 uuid = 3;
    uint32 batch_id = 4;
    int64 expire_at = 5;
}

message EMail{
    enum MailType {
        MailType_None = 0;
        MailType_General = 1;
    }
    enum MailState {
        MailState_Init = 0;
        MailState_Read = 1;
        MailState_Awarded = 2;
    }
    enum MailReadOption {
        MailRead_MailIds = 0;
        MailRead_All = 1;
    }
    enum MailDelOption {
        MailDel_MailIds = 0;
        MailDel_All = 1;
        MailDel_BeenRead = 2;
    }
    enum MailGetAwardOption {
        MailGetAward_MailId = 0;
        MailGetAward_All = 1;
    }
    enum EMailType {
        EMailType_None = 0;
        EMailType_BindCode = 1;
    }
}

message Mail {
    uint64 mail_id = 1; // generated by mail service
    uint64 receiver = 2;
    uint64 sender = 3; // 0 means send by system
    int64 send_time = 4;
    EMail.MailType mail_type = 5;
    string mail_title = 6;
    map<string, string> map_datas = 7;
    repeated Item awards = 8;
    uint32 state = 9;
}

// social
message EFriend{
    enum ReplyOption {
        Reply_Accept = 0;
        Reply_Reject = 1;
    }
    enum ListSortType {
        SortType_User_Id = 0;
        SortType_Create_Time = 1;
    }
}

// web
message WebAccountInfo{
    string account = 1;
    uint64 user_id = 2;
    string nickname = 3;
    string icon = 4;
    string email = 5;
    string aptos_wallet_addr = 6;
}

// nft
message ENFT {
    enum NFTType {
        NFTType_None = 0;
        NFTType_Weapon = 1;
    }
}

message AptosNFTNode {
    uint32 nft_type = 1;
    uint64 nft_id = 2;
    string metadata = 3;
}

message AptosNFTMetadata {
    uint64 nft_id = 1;
    string meta_data = 2;
}

message AptosNFTNodeV2 {
    message Properties {
        string prop1 = 1;
        string prop2 = 2;
        string quality = 3;
        string weapon_id = 4;
        string weapon_type = 5;
    }
    string collection_id = 1;
    string token_data_id = 2;
    string description = 3;
    string token_name = 4;
    uint32 token_id = 5;
    Properties token_properties = 6;
    string token_standard = 7;
    string token_uri = 8;
    string transaction_timestamp = 9;
}