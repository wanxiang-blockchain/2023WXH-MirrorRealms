// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v4.24.3
// source: http_account.proto

package mpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// account
type CReqLoginByPassword struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account  string `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *CReqLoginByPassword) Reset() {
	*x = CReqLoginByPassword{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_account_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CReqLoginByPassword) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CReqLoginByPassword) ProtoMessage() {}

func (x *CReqLoginByPassword) ProtoReflect() protoreflect.Message {
	mi := &file_http_account_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CReqLoginByPassword.ProtoReflect.Descriptor instead.
func (*CReqLoginByPassword) Descriptor() ([]byte, []int) {
	return file_http_account_proto_rawDescGZIP(), []int{0}
}

func (x *CReqLoginByPassword) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *CReqLoginByPassword) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type CResLoginByPassword struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account   *AccountInfo `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	Resources string       `protobuf:"bytes,2,opt,name=resources,proto3" json:"resources,omitempty"`
	Token     string       `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *CResLoginByPassword) Reset() {
	*x = CResLoginByPassword{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_account_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CResLoginByPassword) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CResLoginByPassword) ProtoMessage() {}

func (x *CResLoginByPassword) ProtoReflect() protoreflect.Message {
	mi := &file_http_account_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CResLoginByPassword.ProtoReflect.Descriptor instead.
func (*CResLoginByPassword) Descriptor() ([]byte, []int) {
	return file_http_account_proto_rawDescGZIP(), []int{1}
}

func (x *CResLoginByPassword) GetAccount() *AccountInfo {
	if x != nil {
		return x.Account
	}
	return nil
}

func (x *CResLoginByPassword) GetResources() string {
	if x != nil {
		return x.Resources
	}
	return ""
}

func (x *CResLoginByPassword) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type CResGenerateNonce struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonce string `protobuf:"bytes,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
}

func (x *CResGenerateNonce) Reset() {
	*x = CResGenerateNonce{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_account_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CResGenerateNonce) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CResGenerateNonce) ProtoMessage() {}

func (x *CResGenerateNonce) ProtoReflect() protoreflect.Message {
	mi := &file_http_account_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CResGenerateNonce.ProtoReflect.Descriptor instead.
func (*CResGenerateNonce) Descriptor() ([]byte, []int) {
	return file_http_account_proto_rawDescGZIP(), []int{2}
}

func (x *CResGenerateNonce) GetNonce() string {
	if x != nil {
		return x.Nonce
	}
	return ""
}

type CReqWebLoginByWallet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WalletAddr     string `protobuf:"bytes,1,opt,name=wallet_addr,json=walletAddr,proto3" json:"wallet_addr,omitempty"`
	PubKey         string `protobuf:"bytes,2,opt,name=pub_key,json=pubKey,proto3" json:"pub_key,omitempty"`
	AptosFullMsg   string `protobuf:"bytes,3,opt,name=aptos_full_msg,json=aptosFullMsg,proto3" json:"aptos_full_msg,omitempty"`
	AptosSignature string `protobuf:"bytes,4,opt,name=aptos_signature,json=aptosSignature,proto3" json:"aptos_signature,omitempty"`
}

func (x *CReqWebLoginByWallet) Reset() {
	*x = CReqWebLoginByWallet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_account_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CReqWebLoginByWallet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CReqWebLoginByWallet) ProtoMessage() {}

func (x *CReqWebLoginByWallet) ProtoReflect() protoreflect.Message {
	mi := &file_http_account_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CReqWebLoginByWallet.ProtoReflect.Descriptor instead.
func (*CReqWebLoginByWallet) Descriptor() ([]byte, []int) {
	return file_http_account_proto_rawDescGZIP(), []int{3}
}

func (x *CReqWebLoginByWallet) GetWalletAddr() string {
	if x != nil {
		return x.WalletAddr
	}
	return ""
}

func (x *CReqWebLoginByWallet) GetPubKey() string {
	if x != nil {
		return x.PubKey
	}
	return ""
}

func (x *CReqWebLoginByWallet) GetAptosFullMsg() string {
	if x != nil {
		return x.AptosFullMsg
	}
	return ""
}

func (x *CReqWebLoginByWallet) GetAptosSignature() string {
	if x != nil {
		return x.AptosSignature
	}
	return ""
}

type CReqSendEmailBindCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *CReqSendEmailBindCode) Reset() {
	*x = CReqSendEmailBindCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_account_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CReqSendEmailBindCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CReqSendEmailBindCode) ProtoMessage() {}

func (x *CReqSendEmailBindCode) ProtoReflect() protoreflect.Message {
	mi := &file_http_account_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CReqSendEmailBindCode.ProtoReflect.Descriptor instead.
func (*CReqSendEmailBindCode) Descriptor() ([]byte, []int) {
	return file_http_account_proto_rawDescGZIP(), []int{4}
}

func (x *CReqSendEmailBindCode) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type CResWebLoginByWallet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account   *WebAccountInfo `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	Resources string          `protobuf:"bytes,2,opt,name=resources,proto3" json:"resources,omitempty"`
	Token     string          `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *CResWebLoginByWallet) Reset() {
	*x = CResWebLoginByWallet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_account_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CResWebLoginByWallet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CResWebLoginByWallet) ProtoMessage() {}

func (x *CResWebLoginByWallet) ProtoReflect() protoreflect.Message {
	mi := &file_http_account_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CResWebLoginByWallet.ProtoReflect.Descriptor instead.
func (*CResWebLoginByWallet) Descriptor() ([]byte, []int) {
	return file_http_account_proto_rawDescGZIP(), []int{5}
}

func (x *CResWebLoginByWallet) GetAccount() *WebAccountInfo {
	if x != nil {
		return x.Account
	}
	return nil
}

func (x *CResWebLoginByWallet) GetResources() string {
	if x != nil {
		return x.Resources
	}
	return ""
}

func (x *CResWebLoginByWallet) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type CReqWebBindEmail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Code  string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *CReqWebBindEmail) Reset() {
	*x = CReqWebBindEmail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_account_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CReqWebBindEmail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CReqWebBindEmail) ProtoMessage() {}

func (x *CReqWebBindEmail) ProtoReflect() protoreflect.Message {
	mi := &file_http_account_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CReqWebBindEmail.ProtoReflect.Descriptor instead.
func (*CReqWebBindEmail) Descriptor() ([]byte, []int) {
	return file_http_account_proto_rawDescGZIP(), []int{6}
}

func (x *CReqWebBindEmail) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *CReqWebBindEmail) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type CResWebBindEmail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account   *WebAccountInfo `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	Resources string          `protobuf:"bytes,2,opt,name=resources,proto3" json:"resources,omitempty"`
	Token     string          `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *CResWebBindEmail) Reset() {
	*x = CResWebBindEmail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_account_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CResWebBindEmail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CResWebBindEmail) ProtoMessage() {}

func (x *CResWebBindEmail) ProtoReflect() protoreflect.Message {
	mi := &file_http_account_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CResWebBindEmail.ProtoReflect.Descriptor instead.
func (*CResWebBindEmail) Descriptor() ([]byte, []int) {
	return file_http_account_proto_rawDescGZIP(), []int{7}
}

func (x *CResWebBindEmail) GetAccount() *WebAccountInfo {
	if x != nil {
		return x.Account
	}
	return nil
}

func (x *CResWebBindEmail) GetResources() string {
	if x != nil {
		return x.Resources
	}
	return ""
}

func (x *CResWebBindEmail) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type CResGetAccountInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account *WebAccountInfo `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
}

func (x *CResGetAccountInfo) Reset() {
	*x = CResGetAccountInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_account_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CResGetAccountInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CResGetAccountInfo) ProtoMessage() {}

func (x *CResGetAccountInfo) ProtoReflect() protoreflect.Message {
	mi := &file_http_account_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CResGetAccountInfo.ProtoReflect.Descriptor instead.
func (*CResGetAccountInfo) Descriptor() ([]byte, []int) {
	return file_http_account_proto_rawDescGZIP(), []int{8}
}

func (x *CResGetAccountInfo) GetAccount() *WebAccountInfo {
	if x != nil {
		return x.Account
	}
	return nil
}

type CResGetAptosResources struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resources string `protobuf:"bytes,1,opt,name=resources,proto3" json:"resources,omitempty"`
}

func (x *CResGetAptosResources) Reset() {
	*x = CResGetAptosResources{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_account_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CResGetAptosResources) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CResGetAptosResources) ProtoMessage() {}

func (x *CResGetAptosResources) ProtoReflect() protoreflect.Message {
	mi := &file_http_account_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CResGetAptosResources.ProtoReflect.Descriptor instead.
func (*CResGetAptosResources) Descriptor() ([]byte, []int) {
	return file_http_account_proto_rawDescGZIP(), []int{9}
}

func (x *CResGetAptosResources) GetResources() string {
	if x != nil {
		return x.Resources
	}
	return ""
}

type CReqChangePassword struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OldPassword string `protobuf:"bytes,1,opt,name=old_password,json=oldPassword,proto3" json:"old_password,omitempty"`
	NewPassword string `protobuf:"bytes,2,opt,name=new_password,json=newPassword,proto3" json:"new_password,omitempty"`
}

func (x *CReqChangePassword) Reset() {
	*x = CReqChangePassword{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_account_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CReqChangePassword) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CReqChangePassword) ProtoMessage() {}

func (x *CReqChangePassword) ProtoReflect() protoreflect.Message {
	mi := &file_http_account_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CReqChangePassword.ProtoReflect.Descriptor instead.
func (*CReqChangePassword) Descriptor() ([]byte, []int) {
	return file_http_account_proto_rawDescGZIP(), []int{10}
}

func (x *CReqChangePassword) GetOldPassword() string {
	if x != nil {
		return x.OldPassword
	}
	return ""
}

func (x *CReqChangePassword) GetNewPassword() string {
	if x != nil {
		return x.NewPassword
	}
	return ""
}

type CReqSendEmailResetPasswordCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *CReqSendEmailResetPasswordCode) Reset() {
	*x = CReqSendEmailResetPasswordCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_account_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CReqSendEmailResetPasswordCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CReqSendEmailResetPasswordCode) ProtoMessage() {}

func (x *CReqSendEmailResetPasswordCode) ProtoReflect() protoreflect.Message {
	mi := &file_http_account_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CReqSendEmailResetPasswordCode.ProtoReflect.Descriptor instead.
func (*CReqSendEmailResetPasswordCode) Descriptor() ([]byte, []int) {
	return file_http_account_proto_rawDescGZIP(), []int{11}
}

func (x *CReqSendEmailResetPasswordCode) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type CReqCheckEmailResetPasswordCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Code  string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *CReqCheckEmailResetPasswordCode) Reset() {
	*x = CReqCheckEmailResetPasswordCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_account_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CReqCheckEmailResetPasswordCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CReqCheckEmailResetPasswordCode) ProtoMessage() {}

func (x *CReqCheckEmailResetPasswordCode) ProtoReflect() protoreflect.Message {
	mi := &file_http_account_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CReqCheckEmailResetPasswordCode.ProtoReflect.Descriptor instead.
func (*CReqCheckEmailResetPasswordCode) Descriptor() ([]byte, []int) {
	return file_http_account_proto_rawDescGZIP(), []int{12}
}

func (x *CReqCheckEmailResetPasswordCode) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *CReqCheckEmailResetPasswordCode) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type CResCheckEmailResetPasswordCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonce string `protobuf:"bytes,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
}

func (x *CResCheckEmailResetPasswordCode) Reset() {
	*x = CResCheckEmailResetPasswordCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_account_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CResCheckEmailResetPasswordCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CResCheckEmailResetPasswordCode) ProtoMessage() {}

func (x *CResCheckEmailResetPasswordCode) ProtoReflect() protoreflect.Message {
	mi := &file_http_account_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CResCheckEmailResetPasswordCode.ProtoReflect.Descriptor instead.
func (*CResCheckEmailResetPasswordCode) Descriptor() ([]byte, []int) {
	return file_http_account_proto_rawDescGZIP(), []int{13}
}

func (x *CResCheckEmailResetPasswordCode) GetNonce() string {
	if x != nil {
		return x.Nonce
	}
	return ""
}

type CReqResetPasswordByEmail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email    string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	Nonce    string `protobuf:"bytes,3,opt,name=nonce,proto3" json:"nonce,omitempty"`
}

func (x *CReqResetPasswordByEmail) Reset() {
	*x = CReqResetPasswordByEmail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_account_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CReqResetPasswordByEmail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CReqResetPasswordByEmail) ProtoMessage() {}

func (x *CReqResetPasswordByEmail) ProtoReflect() protoreflect.Message {
	mi := &file_http_account_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CReqResetPasswordByEmail.ProtoReflect.Descriptor instead.
func (*CReqResetPasswordByEmail) Descriptor() ([]byte, []int) {
	return file_http_account_proto_rawDescGZIP(), []int{14}
}

func (x *CReqResetPasswordByEmail) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *CReqResetPasswordByEmail) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *CReqResetPasswordByEmail) GetNonce() string {
	if x != nil {
		return x.Nonce
	}
	return ""
}

type CReqResetPasswordByEmailAndVCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email    string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	Code     string `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *CReqResetPasswordByEmailAndVCode) Reset() {
	*x = CReqResetPasswordByEmailAndVCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_account_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CReqResetPasswordByEmailAndVCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CReqResetPasswordByEmailAndVCode) ProtoMessage() {}

func (x *CReqResetPasswordByEmailAndVCode) ProtoReflect() protoreflect.Message {
	mi := &file_http_account_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CReqResetPasswordByEmailAndVCode.ProtoReflect.Descriptor instead.
func (*CReqResetPasswordByEmailAndVCode) Descriptor() ([]byte, []int) {
	return file_http_account_proto_rawDescGZIP(), []int{15}
}

func (x *CReqResetPasswordByEmailAndVCode) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *CReqResetPasswordByEmailAndVCode) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *CReqResetPasswordByEmailAndVCode) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

var File_http_account_proto protoreflect.FileDescriptor

var file_http_account_proto_rawDesc = []byte{
	0x0a, 0x12, 0x68, 0x74, 0x74, 0x70, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x6d, 0x70, 0x62, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x4b, 0x0a, 0x13, 0x43, 0x52, 0x65, 0x71, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x42, 0x79, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x22, 0x75, 0x0a, 0x13, 0x43, 0x52, 0x65, 0x73, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x42, 0x79, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x2a, 0x0a, 0x07, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d,
	0x70, 0x62, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x29, 0x0a, 0x11, 0x43,
	0x52, 0x65, 0x73, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x6e, 0x63, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x22, 0x9f, 0x01, 0x0a, 0x14, 0x43, 0x52, 0x65, 0x71, 0x57,
	0x65, 0x62, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x42, 0x79, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72,
	0x12, 0x17, 0x0a, 0x07, 0x70, 0x75, 0x62, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x70, 0x75, 0x62, 0x4b, 0x65, 0x79, 0x12, 0x24, 0x0a, 0x0e, 0x61, 0x70, 0x74,
	0x6f, 0x73, 0x5f, 0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x61, 0x70, 0x74, 0x6f, 0x73, 0x46, 0x75, 0x6c, 0x6c, 0x4d, 0x73, 0x67, 0x12,
	0x27, 0x0a, 0x0f, 0x61, 0x70, 0x74, 0x6f, 0x73, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x70, 0x74, 0x6f, 0x73, 0x53,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0x2d, 0x0a, 0x15, 0x43, 0x52, 0x65, 0x71,
	0x53, 0x65, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x42, 0x69, 0x6e, 0x64, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0x79, 0x0a, 0x14, 0x43, 0x52, 0x65, 0x73, 0x57,
	0x65, 0x62, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x42, 0x79, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x12,
	0x2d, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x6d, 0x70, 0x62, 0x2e, 0x57, 0x65, 0x62, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x22, 0x3c, 0x0a, 0x10, 0x43, 0x52, 0x65, 0x71, 0x57, 0x65, 0x62, 0x42, 0x69, 0x6e,
	0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x22, 0x75, 0x0a, 0x10, 0x43, 0x52, 0x65, 0x73, 0x57, 0x65, 0x62, 0x42, 0x69, 0x6e, 0x64, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x12, 0x2d, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x70, 0x62, 0x2e, 0x57, 0x65, 0x62, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x43, 0x0a, 0x12, 0x43, 0x52, 0x65, 0x73, 0x47,
	0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2d, 0x0a,
	0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x6d, 0x70, 0x62, 0x2e, 0x57, 0x65, 0x62, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x35, 0x0a, 0x15,
	0x43, 0x52, 0x65, 0x73, 0x47, 0x65, 0x74, 0x41, 0x70, 0x74, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x22, 0x5a, 0x0a, 0x12, 0x43, 0x52, 0x65, 0x71, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x6c, 0x64,
	0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x6f, 0x6c, 0x64, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x21, 0x0a, 0x0c,
	0x6e, 0x65, 0x77, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x6e, 0x65, 0x77, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22,
	0x36, 0x0a, 0x1e, 0x43, 0x52, 0x65, 0x71, 0x53, 0x65, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0x4b, 0x0a, 0x1f, 0x43, 0x52, 0x65, 0x71, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x22, 0x37, 0x0a, 0x1f, 0x43, 0x52, 0x65, 0x73, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x22, 0x62, 0x0a,
	0x18, 0x43, 0x52, 0x65, 0x71, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x42, 0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6e,
	0x6f, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63,
	0x65, 0x22, 0x68, 0x0a, 0x20, 0x43, 0x52, 0x65, 0x71, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x42, 0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x41, 0x6e, 0x64,
	0x56, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x07, 0x5a, 0x05, 0x2e,
	0x2f, 0x6d, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_http_account_proto_rawDescOnce sync.Once
	file_http_account_proto_rawDescData = file_http_account_proto_rawDesc
)

func file_http_account_proto_rawDescGZIP() []byte {
	file_http_account_proto_rawDescOnce.Do(func() {
		file_http_account_proto_rawDescData = protoimpl.X.CompressGZIP(file_http_account_proto_rawDescData)
	})
	return file_http_account_proto_rawDescData
}

var file_http_account_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_http_account_proto_goTypes = []interface{}{
	(*CReqLoginByPassword)(nil),              // 0: mpb.CReqLoginByPassword
	(*CResLoginByPassword)(nil),              // 1: mpb.CResLoginByPassword
	(*CResGenerateNonce)(nil),                // 2: mpb.CResGenerateNonce
	(*CReqWebLoginByWallet)(nil),             // 3: mpb.CReqWebLoginByWallet
	(*CReqSendEmailBindCode)(nil),            // 4: mpb.CReqSendEmailBindCode
	(*CResWebLoginByWallet)(nil),             // 5: mpb.CResWebLoginByWallet
	(*CReqWebBindEmail)(nil),                 // 6: mpb.CReqWebBindEmail
	(*CResWebBindEmail)(nil),                 // 7: mpb.CResWebBindEmail
	(*CResGetAccountInfo)(nil),               // 8: mpb.CResGetAccountInfo
	(*CResGetAptosResources)(nil),            // 9: mpb.CResGetAptosResources
	(*CReqChangePassword)(nil),               // 10: mpb.CReqChangePassword
	(*CReqSendEmailResetPasswordCode)(nil),   // 11: mpb.CReqSendEmailResetPasswordCode
	(*CReqCheckEmailResetPasswordCode)(nil),  // 12: mpb.CReqCheckEmailResetPasswordCode
	(*CResCheckEmailResetPasswordCode)(nil),  // 13: mpb.CResCheckEmailResetPasswordCode
	(*CReqResetPasswordByEmail)(nil),         // 14: mpb.CReqResetPasswordByEmail
	(*CReqResetPasswordByEmailAndVCode)(nil), // 15: mpb.CReqResetPasswordByEmailAndVCode
	(*AccountInfo)(nil),                      // 16: mpb.AccountInfo
	(*WebAccountInfo)(nil),                   // 17: mpb.WebAccountInfo
}
var file_http_account_proto_depIdxs = []int32{
	16, // 0: mpb.CResLoginByPassword.account:type_name -> mpb.AccountInfo
	17, // 1: mpb.CResWebLoginByWallet.account:type_name -> mpb.WebAccountInfo
	17, // 2: mpb.CResWebBindEmail.account:type_name -> mpb.WebAccountInfo
	17, // 3: mpb.CResGetAccountInfo.account:type_name -> mpb.WebAccountInfo
	4,  // [4:4] is the sub-list for method output_type
	4,  // [4:4] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_http_account_proto_init() }
func file_http_account_proto_init() {
	if File_http_account_proto != nil {
		return
	}
	file_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_http_account_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CReqLoginByPassword); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_account_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CResLoginByPassword); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_account_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CResGenerateNonce); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_account_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CReqWebLoginByWallet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_account_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CReqSendEmailBindCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_account_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CResWebLoginByWallet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_account_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CReqWebBindEmail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_account_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CResWebBindEmail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_account_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CResGetAccountInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_account_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CResGetAptosResources); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_account_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CReqChangePassword); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_account_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CReqSendEmailResetPasswordCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_account_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CReqCheckEmailResetPasswordCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_account_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CResCheckEmailResetPasswordCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_account_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CReqResetPasswordByEmail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_account_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CReqResetPasswordByEmailAndVCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_http_account_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_http_account_proto_goTypes,
		DependencyIndexes: file_http_account_proto_depIdxs,
		MessageInfos:      file_http_account_proto_msgTypes,
	}.Build()
	File_http_account_proto = out.File
	file_http_account_proto_rawDesc = nil
	file_http_account_proto_goTypes = nil
	file_http_account_proto_depIdxs = nil
}
