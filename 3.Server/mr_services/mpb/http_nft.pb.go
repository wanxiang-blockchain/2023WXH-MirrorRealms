// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v4.24.3
// source: http_nft.proto

package mpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CReqGetAptosNFTs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NftTypes []uint32 `protobuf:"varint,1,rep,packed,name=nft_types,json=nftTypes,proto3" json:"nft_types,omitempty"`
}

func (x *CReqGetAptosNFTs) Reset() {
	*x = CReqGetAptosNFTs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_nft_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CReqGetAptosNFTs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CReqGetAptosNFTs) ProtoMessage() {}

func (x *CReqGetAptosNFTs) ProtoReflect() protoreflect.Message {
	mi := &file_http_nft_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CReqGetAptosNFTs.ProtoReflect.Descriptor instead.
func (*CReqGetAptosNFTs) Descriptor() ([]byte, []int) {
	return file_http_nft_proto_rawDescGZIP(), []int{0}
}

func (x *CReqGetAptosNFTs) GetNftTypes() []uint32 {
	if x != nil {
		return x.NftTypes
	}
	return nil
}

type CResGetAptosNFTs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nfts []*AptosNFTNode `protobuf:"bytes,1,rep,name=nfts,proto3" json:"nfts,omitempty"`
}

func (x *CResGetAptosNFTs) Reset() {
	*x = CResGetAptosNFTs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_nft_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CResGetAptosNFTs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CResGetAptosNFTs) ProtoMessage() {}

func (x *CResGetAptosNFTs) ProtoReflect() protoreflect.Message {
	mi := &file_http_nft_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CResGetAptosNFTs.ProtoReflect.Descriptor instead.
func (*CResGetAptosNFTs) Descriptor() ([]byte, []int) {
	return file_http_nft_proto_rawDescGZIP(), []int{1}
}

func (x *CResGetAptosNFTs) GetNfts() []*AptosNFTNode {
	if x != nil {
		return x.Nfts
	}
	return nil
}

type CReqGetAptosNFTMetadatas struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NftIds []uint64 `protobuf:"varint,1,rep,packed,name=nft_ids,json=nftIds,proto3" json:"nft_ids,omitempty"`
}

func (x *CReqGetAptosNFTMetadatas) Reset() {
	*x = CReqGetAptosNFTMetadatas{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_nft_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CReqGetAptosNFTMetadatas) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CReqGetAptosNFTMetadatas) ProtoMessage() {}

func (x *CReqGetAptosNFTMetadatas) ProtoReflect() protoreflect.Message {
	mi := &file_http_nft_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CReqGetAptosNFTMetadatas.ProtoReflect.Descriptor instead.
func (*CReqGetAptosNFTMetadatas) Descriptor() ([]byte, []int) {
	return file_http_nft_proto_rawDescGZIP(), []int{2}
}

func (x *CReqGetAptosNFTMetadatas) GetNftIds() []uint64 {
	if x != nil {
		return x.NftIds
	}
	return nil
}

type CResGetAptosNFTMetadatas struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadatas []*AptosNFTMetadata `protobuf:"bytes,1,rep,name=metadatas,proto3" json:"metadatas,omitempty"`
}

func (x *CResGetAptosNFTMetadatas) Reset() {
	*x = CResGetAptosNFTMetadatas{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_nft_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CResGetAptosNFTMetadatas) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CResGetAptosNFTMetadatas) ProtoMessage() {}

func (x *CResGetAptosNFTMetadatas) ProtoReflect() protoreflect.Message {
	mi := &file_http_nft_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CResGetAptosNFTMetadatas.ProtoReflect.Descriptor instead.
func (*CResGetAptosNFTMetadatas) Descriptor() ([]byte, []int) {
	return file_http_nft_proto_rawDescGZIP(), []int{3}
}

func (x *CResGetAptosNFTMetadatas) GetMetadatas() []*AptosNFTMetadata {
	if x != nil {
		return x.Metadatas
	}
	return nil
}

type CReqGetAptosNFTsV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CReqGetAptosNFTsV2) Reset() {
	*x = CReqGetAptosNFTsV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_nft_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CReqGetAptosNFTsV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CReqGetAptosNFTsV2) ProtoMessage() {}

func (x *CReqGetAptosNFTsV2) ProtoReflect() protoreflect.Message {
	mi := &file_http_nft_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CReqGetAptosNFTsV2.ProtoReflect.Descriptor instead.
func (*CReqGetAptosNFTsV2) Descriptor() ([]byte, []int) {
	return file_http_nft_proto_rawDescGZIP(), []int{4}
}

type CResGetAptosNFTsV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nfts []*AptosNFTNodeV2 `protobuf:"bytes,1,rep,name=nfts,proto3" json:"nfts,omitempty"`
}

func (x *CResGetAptosNFTsV2) Reset() {
	*x = CResGetAptosNFTsV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_nft_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CResGetAptosNFTsV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CResGetAptosNFTsV2) ProtoMessage() {}

func (x *CResGetAptosNFTsV2) ProtoReflect() protoreflect.Message {
	mi := &file_http_nft_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CResGetAptosNFTsV2.ProtoReflect.Descriptor instead.
func (*CResGetAptosNFTsV2) Descriptor() ([]byte, []int) {
	return file_http_nft_proto_rawDescGZIP(), []int{5}
}

func (x *CResGetAptosNFTsV2) GetNfts() []*AptosNFTNodeV2 {
	if x != nil {
		return x.Nfts
	}
	return nil
}

var File_http_nft_proto protoreflect.FileDescriptor

var file_http_nft_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x68, 0x74, 0x74, 0x70, 0x5f, 0x6e, 0x66, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x03, 0x6d, 0x70, 0x62, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x2f, 0x0a, 0x10, 0x43, 0x52, 0x65, 0x71, 0x47, 0x65, 0x74, 0x41, 0x70,
	0x74, 0x6f, 0x73, 0x4e, 0x46, 0x54, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x66, 0x74, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x08, 0x6e, 0x66, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x73, 0x22, 0x39, 0x0a, 0x10, 0x43, 0x52, 0x65, 0x73, 0x47, 0x65, 0x74, 0x41,
	0x70, 0x74, 0x6f, 0x73, 0x4e, 0x46, 0x54, 0x73, 0x12, 0x25, 0x0a, 0x04, 0x6e, 0x66, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x70, 0x62, 0x2e, 0x41, 0x70, 0x74,
	0x6f, 0x73, 0x4e, 0x46, 0x54, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6e, 0x66, 0x74, 0x73, 0x22,
	0x33, 0x0a, 0x18, 0x43, 0x52, 0x65, 0x71, 0x47, 0x65, 0x74, 0x41, 0x70, 0x74, 0x6f, 0x73, 0x4e,
	0x46, 0x54, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x6e,
	0x66, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x04, 0x52, 0x06, 0x6e, 0x66,
	0x74, 0x49, 0x64, 0x73, 0x22, 0x4f, 0x0a, 0x18, 0x43, 0x52, 0x65, 0x73, 0x47, 0x65, 0x74, 0x41,
	0x70, 0x74, 0x6f, 0x73, 0x4e, 0x46, 0x54, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x73,
	0x12, 0x33, 0x0a, 0x09, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x70, 0x62, 0x2e, 0x41, 0x70, 0x74, 0x6f, 0x73, 0x4e,
	0x46, 0x54, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x09, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x73, 0x22, 0x14, 0x0a, 0x12, 0x43, 0x52, 0x65, 0x71, 0x47, 0x65, 0x74,
	0x41, 0x70, 0x74, 0x6f, 0x73, 0x4e, 0x46, 0x54, 0x73, 0x56, 0x32, 0x22, 0x3d, 0x0a, 0x12, 0x43,
	0x52, 0x65, 0x73, 0x47, 0x65, 0x74, 0x41, 0x70, 0x74, 0x6f, 0x73, 0x4e, 0x46, 0x54, 0x73, 0x56,
	0x32, 0x12, 0x27, 0x0a, 0x04, 0x6e, 0x66, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x6d, 0x70, 0x62, 0x2e, 0x41, 0x70, 0x74, 0x6f, 0x73, 0x4e, 0x46, 0x54, 0x4e, 0x6f,
	0x64, 0x65, 0x56, 0x32, 0x52, 0x04, 0x6e, 0x66, 0x74, 0x73, 0x42, 0x07, 0x5a, 0x05, 0x2e, 0x2f,
	0x6d, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_http_nft_proto_rawDescOnce sync.Once
	file_http_nft_proto_rawDescData = file_http_nft_proto_rawDesc
)

func file_http_nft_proto_rawDescGZIP() []byte {
	file_http_nft_proto_rawDescOnce.Do(func() {
		file_http_nft_proto_rawDescData = protoimpl.X.CompressGZIP(file_http_nft_proto_rawDescData)
	})
	return file_http_nft_proto_rawDescData
}

var file_http_nft_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_http_nft_proto_goTypes = []interface{}{
	(*CReqGetAptosNFTs)(nil),         // 0: mpb.CReqGetAptosNFTs
	(*CResGetAptosNFTs)(nil),         // 1: mpb.CResGetAptosNFTs
	(*CReqGetAptosNFTMetadatas)(nil), // 2: mpb.CReqGetAptosNFTMetadatas
	(*CResGetAptosNFTMetadatas)(nil), // 3: mpb.CResGetAptosNFTMetadatas
	(*CReqGetAptosNFTsV2)(nil),       // 4: mpb.CReqGetAptosNFTsV2
	(*CResGetAptosNFTsV2)(nil),       // 5: mpb.CResGetAptosNFTsV2
	(*AptosNFTNode)(nil),             // 6: mpb.AptosNFTNode
	(*AptosNFTMetadata)(nil),         // 7: mpb.AptosNFTMetadata
	(*AptosNFTNodeV2)(nil),           // 8: mpb.AptosNFTNodeV2
}
var file_http_nft_proto_depIdxs = []int32{
	6, // 0: mpb.CResGetAptosNFTs.nfts:type_name -> mpb.AptosNFTNode
	7, // 1: mpb.CResGetAptosNFTMetadatas.metadatas:type_name -> mpb.AptosNFTMetadata
	8, // 2: mpb.CResGetAptosNFTsV2.nfts:type_name -> mpb.AptosNFTNodeV2
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_http_nft_proto_init() }
func file_http_nft_proto_init() {
	if File_http_nft_proto != nil {
		return
	}
	file_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_http_nft_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CReqGetAptosNFTs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_nft_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CResGetAptosNFTs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_nft_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CReqGetAptosNFTMetadatas); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_nft_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CResGetAptosNFTMetadatas); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_nft_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CReqGetAptosNFTsV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_nft_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CResGetAptosNFTsV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_http_nft_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_http_nft_proto_goTypes,
		DependencyIndexes: file_http_nft_proto_depIdxs,
		MessageInfos:      file_http_nft_proto_msgTypes,
	}.Build()
	File_http_nft_proto = out.File
	file_http_nft_proto_rawDesc = nil
	file_http_nft_proto_goTypes = nil
	file_http_nft_proto_depIdxs = nil
}
